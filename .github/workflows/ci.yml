name: Python Application

run-name: ${{ github.actor }} is building & pushing Docker image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# env:
#   DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # - name: Set up Python 3.9
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: "3.9"

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install flake8 pytest
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Lint & Test
      run: echo "runningngngngng"
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # - name: Test with pytest
    #   run: |
    #     pytest

  deploy:
    runs-on: ubuntu-latest
    needs: ['build', 'test']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build & Push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: nutbodyslam053/bd528
        tags: ${{ github.sha }}
        registry: docker.io
        # multiPlatform: true
        # platform: linux/amd64,linux/arm64,linux/arm/v7
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  update-manifest:
    runs-on: ubuntu-latest
    needs: ['deploy']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: 'main'
        path: infra
        token: ${{ secrets.G_TOKEN }}
        # ssh-key: ${{ secrets.G_SSH_KEY }}

    - name: Set up git config
      run: |
          git init
          git config user.name ${{ secrets.G_USERNAME }}
          git config user.email ${{ secrets.G_USEREMAIL }}
          sed -i "s#$(echo "${{ github.actor }}" | tr '[:upper:]' '[:lower:]').*#${{ github.actor }}/bd528:${{ github.sha }}#g" deployment.yaml
          git add -A
          git commit -m "Update image for - ${{ github.sha }}"
          git push